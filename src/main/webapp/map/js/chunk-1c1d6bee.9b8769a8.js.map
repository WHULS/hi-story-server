{"version":3,"sources":["webpack:///./node_modules/_ol@5.3.1@ol/Overlay.js","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/web.dom.iterable.js","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/_string-context.js","webpack:///./src/views/mapControl.vue?12d4","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/es6.string.includes.js","webpack:///./node_modules/_ol@5.3.1@ol/OverlayPositioning.js","webpack:///./src/views/mapControl.vue?b50b","webpack:///./node_modules/_ol@5.3.1@ol/control/MousePosition.js","webpack:///./node_modules/_ol@5.3.1@ol/control/FullScreen.js","webpack:///./node_modules/_ol@5.3.1@ol/control/OverviewMap.js","webpack:///./node_modules/_ol@5.3.1@ol/control/ScaleLine.js","webpack:///./node_modules/_ol@5.3.1@ol/control/ZoomSlider.js","webpack:///./node_modules/_ol@5.3.1@ol/control/ZoomToExtent.js","webpack:///src/views/mapControl.vue","webpack:///./src/views/mapControl.vue?ce17","webpack:///./src/views/mapControl.vue","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/_core-js@2.6.5@core-js/modules/es7.array.includes.js","webpack:///./src/views/mapControl.vue?2126"],"names":["_MapEventType_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_dom_js__WEBPACK_IMPORTED_MODULE_4__","_events_js__WEBPACK_IMPORTED_MODULE_5__","_extent_js__WEBPACK_IMPORTED_MODULE_6__","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","BaseObject","options","call","this","id","insertFirst","undefined","stopEvent","element","document","createElement","className","style","position","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","visible","mapPostrenderListenerKey","Object","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","TOP_LEFT","setPosition","__proto__","prototype","create","constructor","getElement","get","getId","getMap","getOffset","getPosition","getPositioning","appendChild","map","POSTRENDER","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","panIntoView","set","setMap","getTargetElement","mapRect","getRect","getSize","overlayRect","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","Math","abs","center","getView","getCenter","centerPx","getPixelFromCoordinate","newCenterPx","animate","getCoordinateFromPixel","duration","easing","size","box","getBoundingClientRect","offsetX","left","window","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","mapSize","updateRenderedPosition","BOTTOM_RIGHT","CENTER_RIGHT","TOP_RIGHT","right","round","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","offsetWidth","BOTTOM_LEFT","bottom","CENTER_LEFT","offsetHeight","getOptions","__webpack_exports__","$iterators","getKeys","redefine","global","hide","Iterators","wks","ITERATOR","TO_STRING_TAG","ArrayValues","Array","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","i","length","key","NAME","explicit","Collection","proto","isRegExp","defined","module","exports","that","searchString","TypeError","String","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_mapControl_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_mapControl_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","$export","context","INCLUDES","P","F","includes","indexOf","arguments","_vm","_h","$createElement","_c","_self","staticStyle","text-align","attrs","_v","_s","zoomValue","type","on","click","zoomUp","zoomDowm","accordion","change","onControlBoardClick","model","value","callback","$$v","controlBoardActive","expression","name","background-color","controlList","label","checked","staticRenderFns","PROJECTION","COORDINATE_FORMAT","MousePosition_MousePosition","Control","MousePosition","opt_options","MousePosition_render","target","events","_ol_5_3_1_ol_Object","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","projection","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","innerHTML","mapProjection_","transform_","lastMouseMovePixel_","getCoordinateFormat","getProjection","handleMouseMove","event","getEventPixel","updateHTML_","handleMouseOut","viewport","getViewport","listenerKeys","push","EventType","MOUSEMOVE","TOUCHSTART","MOUSEOUT","TOUCHEND","format","proj","html","coordinate","toString","control_Control","mapEvent","frameState","viewState","control_MousePosition","getChangeType","changeType","body","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen_FullScreen","FullScreen","cssClassName_","labelNode_","createTextNode","labelActive","labelActiveNode_","button_","tipLabel","setClassName_","isFullScreen","setAttribute","title","CLICK","handleClick_","cssClasses","css","isFullScreenSupported","keys_","keys","source_","source","preventDefault","handleFullScreen_","exitFullScreen","getElementById","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","dom","updateSize","fullscreen","activeClassName","inactiveClassName","nextClassName","classList","remove","add","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","mozRequestFullScreenWithKeys","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","control_FullScreen","MAX_RATIO","MIN_RATIO","OverviewMap_OverviewMap","OverviewMap","OverviewMap_render","collapsed_","collapsed","collapsible_","collapsible","collapseLabel","collapseLabel_","textContent","label_","activeLabel","button","ovmapDiv_","ovmap_","Map","controls","interactions","view","ovmap","layers","forEach","layer","addLayer","bind","boxSizing","boxOverlay_","OverlayPositioning","addOverlay","scope","overlay","overlayBox","computeDesiredMousePosition","mousePosition","clientX","clientY","move","coordinates","getEventCoordinate","endMoving","setCenter","removeEventListener","addEventListener","oldMap","oldView","unbindView_","setTarget","ObjectEventType","PROPERTYCHANGE","handleMapPropertyChange_","getLayers","getLength","setLayerGroup","getLayerGroup","bindView_","isDef","resetExtent_","MapProperty","VIEW","newView","ViewProperty","ROTATION","handleRotationChanged_","setRotation","getRotation","validateExtent_","extent","calculateExtent","ovmapSize","ovview","ovextent","topLeftPixel","_ol_5_3_1_ol_extent","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","steps","log","LN2","ratio","pow","fit","updateBox_","rotation","ovresolution","getResolution","bottomLeft","topRight","rotateBottomLeft","calculateCoordinateRotate_","width","height","coordinateRotate","currentCenter","_ol_5_3_1_ol_coordinate","handleToggle_","toggle","MapEventType","getCollapsible","setCollapsible","setCollapsed","getCollapsed","getOverviewMap","control_OverviewMap","UNITS_PROP","ScaleLine_Units","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_ScaleLine","ScaleLine","ScaleLine_render","innerElement_","viewState_","minWidth_","minWidth","renderedVisible_","renderedWidth_","handleUnitsChanged_","setUnits","getUnits","updateElement_","units","pointResolutionUnits","Units","METERS","pointResolution","resolution","getMetersPerUnit","nominalCount","suffix","metersPerDegree","asserts","count","floor","isNaN","control_ScaleLine","Direction","VERTICAL","HORIZONTAL","ZoomSlider_ZoomSlider","ZoomSlider","ZoomSlider_render","dragListenerKeys_","currentResolution_","direction_","dragging_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","duration_","thumbElement","containerElement","dragger_","PointerEventHandler","pointer_EventType","POINTERDOWN","handleDraggerStart_","POINTERMOVE","handleDraggerDrag_","POINTERUP","handleDraggerEnd_","handleContainerClick_","Event","disposeInternal","dispose","initSlider_","containerSize","thumb","computedStyle","getComputedStyle","thumbWidth","parseFloat","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","constrainResolution","originalEvent","firstElementChild","setHint","ViewHint","INTERACTING","drag","end","MOUSEUP","deltaX","deltaY","setResolution","setThumbPosition_","res","getPositionForResolution_","x","y","amount","math","fn","getResolutionForValueFunction","getValueForResolutionFunction","control_ZoomSlider","ZoomToExtent_ZoomToExtent","ZoomToExtent","handleZoomToExtent","getExtent","control_ZoomToExtent","mapControlvue_type_script_lang_js_","watch","val","oldVal","Number","addControl","mapControls","mousePositionControl","removeControl","attributionControl","rotateControl","fullScreenControl","overviewMapControl","jquery_default","scaleLineControl","removeClass","addClass","zoomControl","zoomSliderControl","zoomToExtentControl","data","mapHeight","isOverviewMapCollapsed","methods","createCoordinateString","preDefine","h","split","Tile","OSM","View","zoom","Attribution","Rotate","autoHide","Zoom","createMap","util","attribution","rotate","extend","getZoom","setZoom","addListener","_this","e","parse_int_default","children","_","toggleClass","addCustomControl","isActived","fullScreen","setTimeout","mounted","beforeDestroy","control","views_mapControlvue_type_script_lang_js_","component","componentNormalizer","MATCH","KEY","re","f","$includes","el","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_mapControl_vue_vue_type_style_index_0_id_33cf394b_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_mapControl_vue_vue_type_style_index_0_id_33cf394b_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-1c1d6bee.9b8769a8.js","sourcesContent":["/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","import mod from \"-!../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./mapControl.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./mapControl.vue?vue&type=style&index=1&lang=css&\"","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',{attrs:{\"id\":\"map\"}}),_c('p',[_c('span',[_vm._v(\"Zoom Value : \"+_vm._s(_vm.zoomValue)+\"  \")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.zoomUp}},[_vm._v(\"放大\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.zoomDowm}},[_vm._v(\"缩小\")])],1),[_c('el-collapse',{attrs:{\"id\":\"checkbox-board\",\"accordion\":\"\"},on:{\"change\":_vm.onControlBoardClick},model:{value:(_vm.controlBoardActive),callback:function ($$v) {_vm.controlBoardActive=$$v},expression:\"controlBoardActive\"}},[_c('el-collapse-item',{attrs:{\"name\":\"1\"}},[_c('div',{staticStyle:{\"background-color\":\"rgb(0, 0, 0, 0)\"}},[_c('el-checkbox-group',{model:{value:(_vm.controlList),callback:function ($$v) {_vm.controlList=$$v},expression:\"controlList\"}},[_c('el-checkbox',{attrs:{\"label\":\"Mouse Position\",\"checked\":\"\"}}),_c('br'),_c('el-checkbox',{attrs:{\"label\":\"Attribution\"}}),_c('br'),_c('el-checkbox',{attrs:{\"label\":\"Rotate\",\"checked\":\"\"}}),_c('br'),_c('el-checkbox',{attrs:{\"label\":\"Full Screen\",\"checked\":\"\"}}),_c('br'),_c('el-checkbox',{attrs:{\"label\":\"Overview Map\",\"checked\":\"\"}}),_c('br'),_c('el-checkbox',{attrs:{\"label\":\"Scale Line\",\"checked\":\"\"}}),_c('br'),_c('el-checkbox',{attrs:{\"label\":\"Zoom\",\"checked\":\"\"}}),_c('br'),_c('el-checkbox',{attrs:{\"label\":\"Zoom Slider\",\"checked\":\"\"}}),_c('br'),_c('el-checkbox',{attrs:{\"label\":\"Zoom To Extent\"}})],1)],1)])],1)]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /*@__PURE__*/(function (Control) {\n  function MousePosition(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    Control.call(this, {\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  if ( Control ) MousePosition.__proto__ = Control;\n  MousePosition.prototype = Object.create( Control && Control.prototype );\n  MousePosition.prototype.constructor = MousePosition;\n\n  /**\n   * @private\n   */\n  MousePosition.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    this.transform_ = null;\n  };\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getCoordinateFormat = function getCoordinateFormat () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  };\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseMove = function handleMouseMove (event) {\n    var map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseOut = function handleMouseOut (event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MousePosition.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setCoordinateFormat = function setCoordinateFormat (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setProjection = function setProjection (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  MousePosition.prototype.updateHTML_ = function updateHTML_ (pixel) {\n    var html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n\n  return MousePosition;\n}(Control));\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n\n//# sourceMappingURL=MousePosition.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /*@__PURE__*/(function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /*@__PURE__*/(function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /*@__PURE__*/(function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, EventType.MOUSEMOVE, drag, this),\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, EventType.MOUSEUP, end, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\n      var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /*@__PURE__*/(function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map","<template>\r\n<div style=\"text-align:left;\">\r\n  <div id=\"map\"></div>\r\n  <p>\r\n    <span>Zoom Value : {{ zoomValue }}  </span>\r\n    <el-button type=\"primary\" @click=\"zoomUp\">放大</el-button>\r\n    <el-button type=\"primary\" @click=\"zoomDowm\">缩小</el-button>\r\n  </p>\r\n\r\n  <!-- 存储各种控件 -->\r\n  <template id=\"controls\">\r\n    <el-collapse id=\"checkbox-board\" accordion v-model=\"controlBoardActive\" @change=\"onControlBoardClick\">\r\n      <el-collapse-item name=\"1\">\r\n        <div style=\"background-color:rgb(0, 0, 0, 0);\">\r\n          <el-checkbox-group v-model=\"controlList\">\r\n            <el-checkbox label=\"Mouse Position\" checked></el-checkbox><br/>\r\n            <el-checkbox label=\"Attribution\"></el-checkbox><br/>\r\n            <el-checkbox label=\"Rotate\" checked></el-checkbox><br/>\r\n            <el-checkbox label=\"Full Screen\" checked></el-checkbox><br/>\r\n            <el-checkbox label=\"Overview Map\" checked></el-checkbox><br/>\r\n            <el-checkbox label=\"Scale Line\" checked></el-checkbox><br/>\r\n            <el-checkbox label=\"Zoom\" checked></el-checkbox><br/>\r\n            <el-checkbox label=\"Zoom Slider\" checked></el-checkbox><br/>\r\n            <el-checkbox label=\"Zoom To Extent\"></el-checkbox>\r\n          </el-checkbox-group>\r\n        </div>\r\n      </el-collapse-item>\r\n    </el-collapse>\r\n  </template>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery';\r\nimport {Map, View} from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport Control from 'ol/control/Control';\r\n\r\nimport {format, toStringHDMS, degreesToStringHDMS} from 'ol/coordinate.js';\r\nimport {defaults as defaultControls,\r\n        MousePosition,\r\n        Attribution,\r\n        Rotate,\r\n        FullScreen,\r\n        OverviewMap,\r\n        ScaleLine,\r\n        Zoom,\r\n        ZoomSlider,\r\n        ZoomToExtent} from 'ol/control.js';\r\n\r\nexport default {\r\n  name: 'map-control',\r\n  watch: {\r\n    zoomValue: function (val, oldVal) {\r\n      if (val > 28) {\r\n        this.zoomValue = new Number(28);\r\n      } else if (val < 0) {\r\n        this.zoomValue = new Number(0);\r\n      }\r\n    },\r\n    controlList: function (val, oldVal) {\r\n      if (val === oldVal) return;\r\n      // New\r\n      if (val.includes('Mouse Position') && !oldVal.includes('Mouse Position')) this.map.addControl(this.mapControls.mousePositionControl);\r\n      // Move\r\n      else if (!val.includes('Mouse Position') && oldVal.includes('Mouse Position')) this.map.removeControl(this.mapControls.mousePositionControl);\r\n\r\n      if (val.includes('Attribution') && !oldVal.includes('Attribution')) this.map.addControl(this.mapControls.attributionControl);\r\n      else if (!val.includes('Attribution') && oldVal.includes('Attribution')) this.map.removeControl(this.mapControls.attributionControl);\r\n\r\n      if (val.includes('Rotate') && !oldVal.includes('Rotate')) this.map.addControl(this.mapControls.rotateControl);\r\n      else if (!val.includes('Rotate') && oldVal.includes('Rotate')) this.map.removeControl(this.mapControls.rotateControl);\r\n\r\n      if (val.includes('Full Screen') && !oldVal.includes('Full Screen')) this.map.addControl(this.mapControls.fullScreenControl);\r\n      else if (!val.includes('Full Screen') && oldVal.includes('Full Screen')) this.map.removeControl(this.mapControls.fullScreenControl);\r\n\r\n      if (val.includes('Overview Map') && !oldVal.includes('Overview Map')) {\r\n        this.map.addControl(this.mapControls.overviewMapControl);\r\n        $(this.mapControls.scaleLineControl.element).removeClass('ol-scale-line-left');\r\n      } else if (!val.includes('Overview Map') && oldVal.includes('Overview Map')) {\r\n        this.map.removeControl(this.mapControls.overviewMapControl);\r\n        $(this.mapControls.scaleLineControl.element).addClass('ol-scale-line-left');\r\n      }\r\n\r\n      if (val.includes('Scale Line') && !oldVal.includes('Scale Line')) this.map.addControl(this.mapControls.scaleLineControl);\r\n      else if (!val.includes('Scale Line') && oldVal.includes('Scale Line')) this.map.removeControl(this.mapControls.scaleLineControl);\r\n\r\n      if (val.includes('Zoom') && !oldVal.includes('Zoom')) this.map.addControl(this.mapControls.zoomControl);\r\n      else if (!val.includes('Zoom') && oldVal.includes('Zoom')) this.map.removeControl(this.mapControls.zoomControl);\r\n\r\n      if (val.includes('Zoom Slider') && !oldVal.includes('Zoom Slider')) this.map.addControl(this.mapControls.zoomSliderControl);\r\n      else if (!val.includes('Zoom Slider') && oldVal.includes('Zoom Slider')) this.map.removeControl(this.mapControls.zoomSliderControl);\r\n\r\n      if (val.includes('Zoom To Extent') && !oldVal.includes('Zoom To Extent')) this.map.addControl(this.mapControls.zoomToExtentControl);\r\n      else if (!val.includes('Zoom To Extent') && oldVal.includes('Zoom To Extent')) this.map.removeControl(this.mapControls.zoomToExtentControl);\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      map: {},\r\n      mapHeight: '',\r\n      layers: [],\r\n      view: {},\r\n      zoomValue: 0,\r\n\r\n      // Controls\r\n      mapControls: {\r\n        mousePositionControl: {},\r\n        attributionControl: {},\r\n        rotateControl: {},\r\n        fullScreenControl: {},\r\n        overviewMapControl: {},\r\n        scaleLineControl: {},\r\n        zoomControl: {},\r\n        zoomSliderControl: {},\r\n        zoomToExtentControl: {}\r\n      },\r\n      controlList: [],\r\n      isOverviewMapCollapsed: true,\r\n      isFullScreen: false,\r\n      controlBoardActive: '1',\r\n    }\r\n  },//data\r\n  methods: {\r\n    createCoordinateString (coordinate) {\r\n      return 'Mouse Position: ( ' + degreesToStringHDMS('EW', coordinate[0], 2) + ', '\r\n        + degreesToStringHDMS('NS', coordinate[1], 2) + ' )';\r\n    },\r\n    preDefine() {\r\n      // Map Height\r\n      let h = $('.content-box').css('height');\r\n      this.mapHeight = (h.split('px')[0] - 38).toString() + 'px';\r\n      $('#map').css('height', this.mapHeight);\r\n\r\n      // layers\r\n      this.layers = [\r\n        new TileLayer({\r\n          source: new OSM()\r\n        }),\r\n      ],\r\n      // view\r\n      this.view = new View({\r\n        center: [114.353741, 30.528813],\r\n        zoom: 4,\r\n        projection: 'EPSG:4326',\r\n      });\r\n      // Default Controls\r\n      this.mapControls.mousePositionControl = new MousePosition({\r\n        coordinateFormat: this.createCoordinateString,\r\n        projection: 'EPSG:4326',\r\n        className: 'custom-mouse-position'\r\n      });\r\n      this.mapControls.attributionControl = new Attribution();\r\n      this.mapControls.rotateControl = new Rotate({\r\n        className: 'ol-rotate',\r\n        autoHide: true\r\n      });\r\n      this.mapControls.fullScreenControl = new FullScreen({\r\n        className: 'ol-full-screen'\r\n      });\r\n      this.mapControls.overviewMapControl = new OverviewMap({\r\n        view: new View({\r\n          projection: 'EPSG:4326'\r\n        })\r\n      });\r\n      this.mapControls.scaleLineControl = new ScaleLine();\r\n      this.mapControls.zoomControl = new Zoom();\r\n      this.mapControls.zoomSliderControl = new ZoomSlider();\r\n      this.mapControls.zoomToExtentControl = new ZoomToExtent();\r\n    },\r\n    createMap() {\r\n      this.map = new Map({\r\n        controls: defaultControls({\r\n          attribution: false,\r\n          zoom: false,\r\n          rotate: false,\r\n        }).extend([\r\n          this.mapControls.mousePositionControl,\r\n          // this.mapControls.attributionControl,\r\n          this.mapControls.rotateControl,\r\n          this.mapControls.fullScreenControl,\r\n          this.mapControls.overviewMapControl,\r\n          this.mapControls.scaleLineControl,\r\n          this.mapControls.zoomControl,\r\n          // this.mapControls.zoomToExtentControl,\r\n          this.mapControls.zoomSliderControl\r\n        ]),\r\n        target: 'map',\r\n        layers: this.layers,\r\n        view: this.view\r\n      });\r\n      this.zoomValue = this.map.getView().getZoom();\r\n    },\r\n    zoomUp() {\r\n      this.map.getView().setZoom(++this.zoomValue);\r\n    },\r\n    zoomDowm() {\r\n      this.map.getView().setZoom(--this.zoomValue);\r\n    },\r\n    addListener() {\r\n      const controls = this.mapControls;\r\n      // 事件监听\r\n      this.map.on('postrender', e => {\r\n        this.zoomValue = parseInt(e.map.getView().getZoom());\r\n      });\r\n      $(controls.overviewMapControl.element).children('button').click( _ => {\r\n        this.isOverviewMapCollapsed = !this.isOverviewMapCollapsed;\r\n        $(controls.scaleLineControl.element).toggleClass('ol-scale-line-right');\r\n      });\r\n      $(controls.fullScreenControl.element).children('button').click( _ => {\r\n        this.isFullScreen = !this.isFullScreen;\r\n        $('#map').css('height', this.isFullScreen ? '100%' : this.mapHeight);\r\n      });\r\n    },\r\n    addCustomControl () {\r\n      this.map.addControl(new Control({\r\n        element: $('#checkbox-board')[0]\r\n      }));\r\n    },\r\n    onControlBoardClick (isActived) {\r\n      const fullScreen = this.mapControls.fullScreenControl.element,\r\n            rotate =this.mapControls.rotateControl.element;\r\n      \r\n      // \"1\" 为展开状态\r\n      if (isActived === '1') {\r\n        // 1. Add left-moved animation\r\n        $(fullScreen).toggleClass('anim-full-screen-left');\r\n        $(rotate).toggleClass('anim-rotate-left');\r\n\r\n        // 2. Set the position\r\n        $(fullScreen).removeClass('ol-full-screen-right');\r\n        $(rotate).removeClass('ol-rotate-right');\r\n        \r\n        // 3. Remove left-moved animation\r\n        setTimeout(_ => {\r\n          $(fullScreen).toggleClass('anim-full-screen-left');\r\n          $(rotate).toggleClass('anim-rotate-left');\r\n        }, 500);\r\n      } else {\r\n        // 1. Add right-moved animation\r\n        // 2. Set the position\r\n        setTimeout(() => {\r\n          $(fullScreen).toggleClass('anim-full-screen-right');\r\n          $(rotate).toggleClass('anim-rotate-right');\r\n\r\n          $(fullScreen).addClass('ol-full-screen-right');\r\n          $(rotate).addClass('ol-rotate-right');\r\n        }, 300);\r\n\r\n        // 3. Remove right-moved animation\r\n        setTimeout(_ => {\r\n          $(fullScreen).toggleClass('anim-full-screen-right');\r\n          $(rotate).toggleClass('anim-rotate-right');\r\n        }, 500);\r\n      }\r\n    }\r\n  }, // methods\r\n  mounted() {\r\n    this.preDefine();\r\n    this.createMap();\r\n    this.addCustomControl();\r\n    this.addListener();\r\n  }, // mounted\r\n  beforeDestroy() {\r\n    const map = this.map;\r\n    this.controlList.forEach( control => {\r\n      map.removeControl(control);\r\n    });\r\n  }, // beforeDestroy\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  width: 100%;\r\n}\r\n</style>\r\n\r\n<style>\r\np {\r\n  margin: 3px 0;\r\n}\r\n.custom-mouse-position {\r\n  bottom: 8px;\r\n  right: 8px;\r\n  position: absolute;\r\n  font-weight: bold;\r\n}\r\n/* Full Screen */\r\n.ol-full-screen {\r\n  right: 145px;\r\n}\r\n.ol-full-screen-right {\r\n  right: 40px;\r\n}\r\n.anim-full-screen-left {\r\n  animation: anim-full-screen-left 0.3s;\r\n}\r\n.anim-full-screen-right {\r\n  animation: anim-full-screen-right 0.3s;\r\n}\r\n@keyframes anim-full-screen-right {\r\n  from {right: 145px;}\r\n  to {right: 40px;}\r\n}\r\n@keyframes anim-full-screen-left {\r\n  from {right: 40px;}\r\n  to {right: 145px;}  \r\n}\r\n/* Rotate */\r\n.ol-rotate {\r\n  right: 180px;\r\n}\r\n.ol-rotate-right {\r\n  right: 75px;\r\n}\r\n.anim-rotate-left {\r\n  animation: anim-rotate-left 0.3s;\r\n}\r\n.anim-rotate-right {\r\n  animation: anim-rotate-right 0.3s;\r\n}\r\n@keyframes anim-rotate-right {\r\n  from {right: 180px;}\r\n  to {right: 75px;}\r\n}\r\n@keyframes anim-rotate-left {\r\n  from {right: 75px;}\r\n  to {right: 180px;}\r\n}\r\n/* Scale Line */\r\n.ol-scale-line {\r\n  left: 45px;\r\n}\r\n.ol-scale-line-left {\r\n  left: 8px;\r\n}\r\n.ol-scale-line-right {\r\n  left: 175px;\r\n}\r\n#checkbox-board {\r\n  display: inline-block;\r\n  padding: 1px;\r\n  position: absolute;\r\n  background-color: rgb(0, 0, 0, 0);\r\n  top: 0.5em;\r\n  right: 8px;\r\n}\r\n.el-checkbox__input.is-checked+.el-checkbox__label {\r\n  color: rgb(6, 41, 77);\r\n  font-weight: bold;\r\n}\r\n.el-collapse-item__header {\r\n  margin: 1px;\r\n  width: 25px;\r\n  height: 25px;\r\n  background-color: rgb(240, 255, 255, 0.5);\r\n}\r\n.el-collapse-item__header.is-active {\r\n  width: 100%;\r\n}\r\n.el-collapse-item__content {\r\n  background-color: rgb(240, 255, 255, 0.5);\r\n  padding: 3px;\r\n}\r\n.el-collapse-item__wrap {\r\n  background-color: rgb(0, 0, 0, 0);\r\n  width: 135px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./mapControl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./mapControl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mapControl.vue?vue&type=template&id=33cf394b&scoped=true&\"\nimport script from \"./mapControl.vue?vue&type=script&lang=js&\"\nexport * from \"./mapControl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./mapControl.vue?vue&type=style&index=0&id=33cf394b&scoped=true&lang=css&\"\nimport style1 from \"./mapControl.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"33cf394b\",\n  null\n  \n)\n\nexport default component.exports","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","import mod from \"-!../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./mapControl.vue?vue&type=style&index=0&id=33cf394b&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./mapControl.vue?vue&type=style&index=0&id=33cf394b&scoped=true&lang=css&\""],"sourceRoot":""}